Started by user [8mha:AAAAlh+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAzOEgYu/dLi1CL9vNKcHACFIKlWvwAAAA==[0manonymous
[EnvInject] - Loading node environment variables.
Building in workspace /var/lib/jenkins/workspace/UI-HTML-1

Deleting project workspace... done

[UI-HTML-1] $ /bin/sh -xe /tmp/hudson940512347814690014.sh
+ git clone https://github.com/aliceh/se34euca
Cloning into 'se34euca'...
+ export PATH=/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/sbin:/sbin:/bin:/usr/lib/firefox/firefox
+ export DISPLAY=:1
+ java -jar /var/lib/jenkins/selenium-server-standalone-2.39.0.jar -userExtensions /var/lib/jenkins/user-extensions.js -htmlSuite *firefox https://10.111.5.8:8888 /root/se34euca/selenium_ide/Jenkins_3.4.2/UI-manual-tests_1.html report1.html -trustAllSSLCertificates -debug
Jan 23, 2014 5:28:31 PM org.openqa.grid.selenium.GridLauncher main
INFO: Launching a standalone server
17:28:33.220 INFO - Java: Sun Microsystems Inc. 20.0-b12
17:28:33.221 INFO - OS: Linux 3.2.0-37-generic-pae i386
17:28:33.228 INFO - v2.39.0, with Core v2.39.0. Built from revision ff23eac
17:28:33.228 INFO - Selenium server running in debug mode.
17:28:33.236 DEBUG - add component: SocketListener0@0.0.0.0:4444
17:28:33.249 DEBUG - add component: org.openqa.jetty.http.ResourceCache@1404536
17:28:33.252 DEBUG - add component: org.openqa.selenium.server.ProxyHandler in HttpContext[/,/]
17:28:33.253 DEBUG - add component: HttpContext[/,/]
17:28:33.254 DEBUG - Added HttpContext[/,/] for host *
17:28:33.254 DEBUG - add component: org.openqa.jetty.http.ResourceCache@fa9cf
17:28:33.255 DEBUG - added SC{BASIC,null,user,CONFIDENTIAL} at /org/openqa/selenium/tests/html/basicAuth/*
17:28:33.260 DEBUG - add component: org.openqa.jetty.http.handler.SecurityHandler in HttpContext[/selenium-server,/selenium-server]
17:28:33.262 DEBUG - add component: org.openqa.selenium.server.StaticContentHandler in HttpContext[/selenium-server,/selenium-server]
17:28:33.263 DEBUG - add component: org.openqa.selenium.server.SessionExtensionJsHandler in HttpContext[/selenium-server,/selenium-server]
17:28:33.263 DEBUG - add component: org.openqa.selenium.server.htmlrunner.SingleTestSuiteResourceHandler in HttpContext[/selenium-server,/selenium-server]
17:28:33.264 DEBUG - add component: org.openqa.selenium.server.htmlrunner.SeleniumHTMLRunnerResultsHandler@7b7072
17:28:33.264 DEBUG - add component: HttpContext[/selenium-server,/selenium-server]
17:28:33.267 DEBUG - Added HttpContext[/selenium-server,/selenium-server] for host *
17:28:33.277 INFO - Default driver org.openqa.selenium.iphone.IPhoneDriver registration is skipped: registration capabilities Capabilities [{platform=MAC, browserName=iPad, version=}] does not match with current platform: LINUX
17:28:33.278 INFO - Default driver org.openqa.selenium.iphone.IPhoneDriver registration is skipped: registration capabilities Capabilities [{platform=MAC, browserName=iPhone, version=}] does not match with current platform: LINUX
17:28:33.278 INFO - Default driver org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{platform=WINDOWS, ensureCleanSession=true, browserName=internet explorer, version=}] does not match with current platform: LINUX
17:28:33.305 DEBUG - add component: org.openqa.jetty.http.ResourceCache@cf2c80
17:28:33.314 DEBUG - add component: org.openqa.selenium.server.SeleniumDriverResourceHandler in HttpContext[/selenium-server,/selenium-server]
17:28:33.315 DEBUG - add component: HttpContext[/selenium-server/driver,/selenium-server/driver]
17:28:33.315 DEBUG - Added HttpContext[/selenium-server/driver,/selenium-server/driver] for host *
17:28:33.315 DEBUG - add component: org.openqa.jetty.http.ResourceCache@13c5982
17:28:33.327 DEBUG - add component: WebDriver remote server
17:28:33.335 DEBUG - add component: org.openqa.jetty.jetty.servlet.HashSessionManager@117a8bd
17:28:33.336 DEBUG - add component: org.openqa.jetty.jetty.servlet.ServletHandler@471e30
17:28:33.336 INFO - RemoteWebDriver instances should connect to: http://127.0.0.1:4444/wd/hub
17:28:33.336 DEBUG - add component: HttpContext[/wd,/wd]
17:28:33.336 DEBUG - Added HttpContext[/wd,/wd] for host *
17:28:33.336 DEBUG - Starting org.openqa.jetty.jetty.Server@133f1d7
17:28:33.339 INFO - Version Jetty/5.1.x
17:28:33.339 DEBUG - LISTENERS: [SocketListener0@0.0.0.0:4444]
17:28:33.340 DEBUG - HANDLER: {null={/selenium-server/driver/*=[HttpContext[/selenium-server/driver,/selenium-server/driver]], /selenium-server/*=[HttpContext[/selenium-server,/selenium-server]], /=[HttpContext[/,/]], /wd/*=[HttpContext[/wd,/wd]]}}
17:28:33.340 DEBUG - Starting HttpContext[/selenium-server/driver,/selenium-server/driver]
17:28:33.340 DEBUG - Init classloader from null, sun.misc.Launcher$AppClassLoader@3e25a5 for HttpContext[/selenium-server/driver,/selenium-server/driver]
17:28:33.340 INFO - Started HttpContext[/selenium-server/driver,/selenium-server/driver]
17:28:33.340 DEBUG - Starting HttpContext[/selenium-server,/selenium-server]
17:28:33.340 DEBUG - Init classloader from null, sun.misc.Launcher$AppClassLoader@3e25a5 for HttpContext[/selenium-server,/selenium-server]
17:28:33.346 DEBUG - Started org.openqa.jetty.http.handler.SecurityHandler in HttpContext[/selenium-server,/selenium-server]
17:28:33.346 DEBUG - Started org.openqa.selenium.server.StaticContentHandler in HttpContext[/selenium-server,/selenium-server]
17:28:33.346 DEBUG - Started org.openqa.selenium.server.SessionExtensionJsHandler in HttpContext[/selenium-server,/selenium-server]
17:28:33.347 DEBUG - Started org.openqa.selenium.server.htmlrunner.SingleTestSuiteResourceHandler in HttpContext[/selenium-server,/selenium-server]
17:28:33.347 DEBUG - Started org.openqa.selenium.server.SeleniumDriverResourceHandler in HttpContext[/selenium-server,/selenium-server]
17:28:33.347 INFO - Started HttpContext[/selenium-server,/selenium-server]
17:28:33.348 DEBUG - Starting HttpContext[/,/]
17:28:33.348 DEBUG - Init classloader from null, sun.misc.Launcher$AppClassLoader@3e25a5 for HttpContext[/,/]
17:28:33.349 DEBUG - Started org.openqa.selenium.server.ProxyHandler in HttpContext[/,/]
17:28:33.349 INFO - Started HttpContext[/,/]
17:28:33.349 DEBUG - Starting HttpContext[/wd,/wd]
17:28:33.349 DEBUG - Init classloader from null, sun.misc.Launcher$AppClassLoader@3e25a5 for HttpContext[/wd,/wd]
17:28:33.349 DEBUG - Starting org.openqa.jetty.jetty.servlet.ServletHandler@471e30
17:28:33.349 DEBUG - New random session seed
17:28:33.671 DEBUG - Started holder of class org.openqa.selenium.remote.server.DriverServlet
17:28:33.671 INFO - Started org.openqa.jetty.jetty.servlet.ServletHandler@471e30
17:28:33.671 INFO - Started HttpContext[/wd,/wd]
17:28:33.673 DEBUG - Session scavenger period = 30s
17:28:33.674 INFO - Started SocketListener on 0.0.0.0:4444
17:28:33.674 INFO - Started org.openqa.jetty.jetty.Server@133f1d7
Can't find HTML Suite file:/root/se34euca/selenium_ide/Jenkins_3.4.2/UI-manual-tests_1.html:
Usage: java -jar selenium-server.jar [-interactive] [options]

  -port <nnnn>: the port number the selenium server should use
    (default 4444)
  -timeout <nnnn>: an integer number of seconds we should allow a
    client to be idle
  -browserTimeout <nnnn>: an integer number of seconds a browser is
    allowed to hang
  -interactive: puts you into interactive mode.  See the tutorial for
    more details
  -singleWindow: puts you into a mode where the test web site
    executes in a frame. This mode should only be selected if the
    application under test does not use frames.
  -profilesLocation: Specifies the directory that holds the profiles
    that java clients can use to start up selenium.  Currently
    supported for Firefox only.
  -forcedBrowserMode <browser>: sets the browser mode to a single
    argument (e.g. "*iexplore") for all sessions, no matter what is
    passed to getNewBrowserSession
  -forcedBrowserModeRestOfLine <browser>: sets the browser mode to
    all the remaining tokens on the line (e.g. "*custom
    /some/random/place/iexplore.exe") for all sessions, no matter what
    is passed to getNewBrowserSession
  -userExtensions <file>: indicates a JavaScript file that will be
    loaded into selenium
  -browserSessionReuse: stops re-initialization and spawning of the
    browser between tests
  -avoidProxy: By default, we proxy every browser request; set this
    flag to make the browser use our proxy only for URLs containing
    '/selenium-server'
  -firefoxProfileTemplate <dir>: normally, we generate a fresh empty
    Firefox profile every time we launch.  You can specify a directory
    to make us copy your profile directory instead.
  -debug: puts you into debug mode, with more trace information and
    diagnostics on the console
  -browserSideLog: enables logging on the browser side; logging
    messages will be transmitted to the server.  This can affect
    performance.
  -ensureCleanSession: If the browser does not have user profiles,
    make sure every new session has no artifacts from previous
    sessions.  For example, enabling this option will cause all user
    cookies to be archived before launching IE, and restored after IE
    is closed.
  -trustAllSSLCertificates: Forces the Selenium proxy to trust all
    SSL certificates.  This doesn't work in browsers that don't use the
    Selenium proxy.
  -log <logFileName>: writes lots of debug information out to a log
    file
  -htmlSuite <browser> <startURL> <suiteFile> <resultFile>: Run a
    single HTML Selenese (Selenium Core) suite and then exit
    immediately, using the specified browser (e.g. "*firefox") on the
    specified URL (e.g. "http://www.google.com").  You need to specify
    the absolute path to the HTML test suite as well as the path to the
    HTML results file we'll generate.
  -proxyInjectionMode: puts you into proxy injection mode, a mode
    where the selenium server acts as a proxy server for all content
    going to the test application.  Under this mode, multiple domains
    can be visited, and the following additional flags are supported:

    -dontInjectRegex <regex>: an optional regular expression that
      proxy injection mode can use to know when to bypss injection
    -userJsInjection <file>: specifies a JavaScript file which will
      then be injected into all pages
    -userContentTransformation <regex> <replacement>: a regular
      expression which is matched against all test HTML content; the
      second is a string which will replace matches.  These flags can
      be used any number of times.  A simple example of how this could
      be useful: if you add "-userContentTransformation https http"
      then all "https" strings in the HTML of the test application will
      be changed to be "http".
Build step 'Execute shell' marked build as failure
Archiving artifacts
Finished: FAILURE
